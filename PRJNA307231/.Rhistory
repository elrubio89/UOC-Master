frotis_excl3<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/frotis_excl2_modificado.xlsx")
library(haven)
library(readxl)
library(openxlsx)
frotis_excl3<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/frotis_excl2_modificado.xlsx")
frotis_excl3<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/frotis_excl2_modificado.xlsx")
frotis_excl3<-subset(frotis_excl3, frotis_excl3$Disponible_SN==1)
table(frotis_excl3$Cultivo_PN, useNA = "ifany")
table(frotis_excl3$CI, useNA = "ifany")
View(frotis_excl3)
datos3<-frotis_excl3[ ,c("NHC", "CI")]
View(datos3)
datos3<-unique(datos3)
table(datos3$CI)
frotis_excl3$Frotis_episodio<-str_sub(frotis_excl3$Paciente_Episodio_Frotis, 9,10)
frotis_excl3<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/frotis_excl3.xlsx")
str(frotis_excl3)
copros<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/cultivos/Extracte de resultats del box de Coprocultius entre_ 01.05.2018 i 01.02.2019.xls")
hemos<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/cultivos/Extracte de resultats del box de Hemocultius entre_ 01.05.2018 i 01.02.2019.xls")
frotis<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/cultivos/Extracte de resultats del box de Frotis entre_ 01.05.2018 i 01.02.2019.xls")
respis<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/cultivos/Extracte de resultats del box de Mostres Respiratories entre_ 01.05.2018 i 01.02.2019.xls")
orinas<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/cultivos/Extracte de resultats del box de Urinocultius entre_ 01.05.2018 i 01.02.2019.xls")
varis<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/cultivos/Extracte de resultats del box de Varis entre_ 01.05.2018 i 01.02.2019.xls")
virus<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/cultivos/Extracte de resultats del box de Virologia entre_ 01.05.2018 i 01.02.2019.xls")
names(copros)
names(frotis)
names(virus)
str(copros$Id_Pacient)
muestras<-rbind(copros, frotis, hemos, orinas, respis, varis, virus)
str(muestras)
View(muestras)
muestras$Id_Pacient<-as.numeric(muestras$Id_Pacient)
##Selecciono solo los cultivos de los pacientes del estudio:
muestras_estudio<-subset(muestras, muestras$Id_Pacient%in% frotis_excl3$NHC)
##Seleccionar solo los cultivos que se hayan recogido entre
##-5 y +30 días de fecha de ingreso en UCI para cada paciente:
##Primero unifico las dos bases de datos
muestras_estudio2<-merge(frotis_excl3, muestras_estudio, by.x = "NHC",  by.y="Id_Pacient", all = TRUE)
muestras_estudio2$Data_Registre<-as.Date(muestras_estudio2$Data_Registre, "%y-%m-%d")
muestras_estudio2$Data_Ingreso_UCI<-as.Date(muestras_estudio2$Data_Ingreso_UCI, "%y-%m-%d")
muestras_estudio2$dias<-muestras_estudio2$Data_Registre - muestras_estudio2$Data_Ingreso_UCI
muestras_estudio3<-subset(muestras_estudio2, muestras_estudio2$dias %in% -5:30)
str(muestras_estudio3)
View(muestras_estudio3)
unique(muestras_estudio3$Codigo_frotis)
length(unique(muestras_estudio3$Codigo_frotis))
(unique(muestras_estudio3$Codigo_frotis)%in%frotis_excl3$Codigo_frotis
)
table(unique(muestras_estudio3$Codigo_frotis)%in%frotis_excl3$Codigo_frotis)
table(unique(muestras_estudio3$Codigo_frotis)%in%frotis_excl3$Codigo_frotis)
length(unique(frotis_excl3$Paciente_Episodio))
table(muestras_estudio3$`Tipus de Mostra`)
table(muestras_estudio3$Estudi)
table(muestras_estudio3$Cultiu)
table(muestras_estudio3$Modificador)
names(muestras_estudio3)
nrow(unique(muestras_estudio3[ ,1:32]))
nrow(unique(muestras_estudio3[ ,33:50]))
names(muestras_estudio3[ ,33:50])
########Solo con hemos posotivos
hemos
View(hemos)
table(hemos$Cultiu)
hemos_posz<-subset(hemos, hemos$Cultiu=="Positivo")
rm(hemos_posz)
hemos_pos<-subset(hemos, hemos$Cultiu=="Positivo")
hemos_pos$Id_Pacient<-as.numeric(hemos_pos$Id_Pacient)
hemos_pos_estudio<-subset(hemos_pos,hemos_pos$Id_Pacient%in% frotis_excl3$NHC)
hemos_pos_estudio2<-merge(frotis_excl3, hemos_pos_estudio, by.x = "NHC",  by.y="Id_Pacient", all = TRUE)
View(hemos_pos_estudio2)
table(hemos$Quantificacio)
hemos$Id_Pacient<-as.numeric(hemos$Id_Pacient)
hemos_estudio<-subset(hemos,hemo$Id_Pacient%in% frotis_excl3$NHC)
hemos_estudio<-subset(hemos,hemos$Id_Pacient%in% frotis_excl3$NHC)
table(hemos_estudio$Quantificacio)
View(hemos_estudio)
rm(hemos_pos)
rm(hemos_pos_estudio)
rm(hemos_pos_estudio2)
hemos_estudio2<-merge(frotis_excl3, hemos_estudio, by.x = "NHC",  by.y="Id_Pacient", all = TRUE)
hemos_estudio2$Data_Registre<-as.Date(hemos_estudio$Data_Registre, "%y-%m-%d")
hemos_estudio2$Data_Registre<-as.Date(hemos_estudio2$Data_Registre, "%y-%m-%d")
hemos_estudio2$Data_Ingreso_UCI<-as.Date(hemos_estudio2$Data_Ingreso_UCI, "%y-%m-%d")
hemos_estudio2$dias<-hemos_estudio2$Data_Registre - hemos_estudio2$Data_Ingreso_UCI
hemos_estudio2<-subset(hemos_estudio2, hemos_estudio2$dias %in% -5:30)
View(hemos_estudio2)
table(hemos_estudio2$Quantificacio)
hemos_estudio_pos<-subset(hemos_estudio2, hemos_estudio2$Quantificacio %in% c("Se aislan colonias","Hemocultivo positivo"))
table(hemos_estudio_pos$Quantificacio)
View(hemos_estudio_pos)
table(hemos_estudio_pos$Aillament)
table(hemos_estudio_pos$Paciente_Episodio)
length(unique(hemos_estudio_pos$Paciente_Episodio))
table(hemos_estudio_pos$`Tipus de Mostra`)
hemos_estudio_pos<-subset(hemos_estudio_pos, hemos_estudio_pos$`Tipus de Mostra`!="Catéter vascular")
table(hemos_estudio_pos$`Tipus de Mostra`)
table(frotis_excl3$Cultivo_PN)
hemos_estudio_pos$`Tipus de Mostra`=="Hemocultivo (una extracción)"<-"Hemocultivo 1"
hemos_estudio_pos[hemos_estudio_pos$`Tipus de Mostra`=="Hemocultivo (una extracción)", hemos_estudio_pos$`Tipus de Mostra`]
hemos_estudio_pos[hemos_estudio_pos$`Tipus de Mostra`=="Hemocultivo (una extracción)", "Tipus de Mostra"]
hemos_estudio_pos[hemos_estudio_pos$`Tipus de Mostra`=="Hemocultivo (una extracción)", "Tipus de Mostra"]<-"Hemocultivo 1"
table(hemos_estudio_pos$`Tipus de Mostra`)
View(frotis_excl3)
episodios<-frotis_excl3[ ,-2]
View(episodios)
episodios<-unique(episodios)
episodios<-frotis_excl3[ ,-2]
episodios<-unique(episodios)
names(frotis_excl3)
episodios<-frotis_excl3[ ,-c(2,6,9:20,29:32)]
episodios<-unique(episodios)
unique(episodios$Paciente_Episodio)
length(unique(episodios$Paciente_Episodio))
names(episodios)
names(frotis_excl3)
episodios<-frotis_excl3[ ,-c(2,6,9:20,22,29:32)]
episodios<-unique(episodios)
table(episodios$Paciente_Episodio)
names(frotis_excl3)
episodios<-frotis_excl3[ ,-c(2,6,8:20,22,29:32)]
episodios<-unique(episodios)
table(episodios$Paciente_Episodio)
names(frotis_excl3)
##Modifico un dato que está mal:
frotis_excl3[frotis_excl3$Codigo_frotis=="M064-2", "Paciente_Episodio"]<-"M064_E2"
frotis_excl3[frotis_excl3$Codigo_frotis=="M064-2", "Paciente_Episodio_Frotis"]<-"M064_E2_F1"
##Modifico un dato que está mal:
frotis_excl3[frotis_excl3$Codigo_frotis=="M064-2", "Paciente_Episodio"]<-"M064_E2"
frotis_excl3[frotis_excl3$Codigo_frotis=="M064-2", "Paciente_Episodio_Frotis"]<-"M064_E2_F1"
frotis_excl3[frotis_excl3$Codigo_frotis=="M064-2", "Nº episodio"]<-2
frotis_excl3[frotis_excl3$Codigo_frotis=="M064-2", "Fotis_episodio"]<-"F1"
write.xlsx(frotis_excl3, "/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/frotis_excl3.xlsx")
frotis_excl3<-read_excel("/media/erubio/D04C-A669/Final de residencia/Base de datos/Estudio enterococos/frotis_excl3.xlsx")
str(frotis_excl3)
length(unique(frotis_excl3$Paciente_Episodio))
########Solo con hemos posotivos
hemos$Id_Pacient<-as.numeric(hemos$Id_Pacient)
hemos_estudio<-subset(hemos,hemos$Id_Pacient%in% frotis_excl3$NHC)
hemos_estudio2<-merge(frotis_excl3, hemos_estudio, by.x = "NHC",  by.y="Id_Pacient", all = TRUE)
hemos_estudio2$Data_Registre<-as.Date(hemos_estudio2$Data_Registre, "%y-%m-%d")
hemos_estudio2$Data_Ingreso_UCI<-as.Date(hemos_estudio2$Data_Ingreso_UCI, "%y-%m-%d")
hemos_estudio2$dias<-hemos_estudio2$Data_Registre - hemos_estudio2$Data_Ingreso_UCI
hemos_estudio2<-subset(hemos_estudio2, hemos_estudio2$dias %in% -5:30)
hemos_estudio_pos<-subset(hemos_estudio2, hemos_estudio2$Quantificacio %in% c("Se aislan colonias","Hemocultivo positivo"))
table(hemos_estudio_pos$Quantificacio)
table(hemos_estudio_pos$Aillament)
table(hemos_estudio_pos$Paciente_Episodio)
length(unique(hemos_estudio_pos$Paciente_Episodio))
table(hemos_estudio_pos$`Tipus de Mostra`)
hemos_estudio_pos<-subset(hemos_estudio_pos, hemos_estudio_pos$`Tipus de Mostra`!="Catéter vascular")
table(frotis_excl3$Cultivo_PN)
hemos_estudio_pos[hemos_estudio_pos$`Tipus de Mostra`=="Hemocultivo (una extracción)", "Tipus de Mostra"]<-"Hemocultivo 1"
table(hemos_estudio_pos$`Tipus de Mostra`)
names(frotis_excl3)
episodios<-frotis_excl3[ ,-c(2,6,8:20,22,29:32)]
episodios<-unique(episodios)
table(episodios$Paciente_Episodio)
episodios$Hemo_pos_SN<-ifelse(episodios$Paciente_Episodio %in% hemos_estudio_pos$Paciente_Episodio, 1, 0)
table(episodios$Hemo_pos_SN)
Q1 <- matrix(c(rep(1, 4), rep(2, 4), rep(3, 4), rep(4, 4)),4,4)
Q1
Q2 <- mapply(rep,1:4,4)
Q2
install.packages(c("backports", "BH", "bit64", "broom", "callr", "cli", "clipr", "colorspace", "covr", "cpp11", "crayon", "crosstalk", "data.table", "DBI", "desc", "devtools", "digest", "dplyr", "DT", "fansi", "farver", "fastmap", "forcats", "Formula", "generics", "ggplot2", "ggrepel", "ggsignif", "gh", "git2r", "glue", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "isoband", "jsonlite", "knitr", "labeling", "lifecycle", "magrittr", "MASS", "matrixStats", "memoise", "mime", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "R6", "Rcpp", "RcppArmadillo", "readr", "rlang", "rprojroot", "RSQLite", "rstudioapi", "servr", "shiny", "stringi", "survival", "testthat", "tibble", "tidyr", "usethis", "vctrs", "withr", "xfun"))
file.exists("~/.ssh/id_rsa.pub")
install.packages("RcppParallel")
library(RcppParallel)
library(RcppParallel)
library(RcppParallel)
library(RcppParallel)
library(RcppParallel)
library(RcppParallel)
library(RcppParallel)
library(readr)
out_card <- read_delim("Documentos/UOCMaster/test2/out.card.tsv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(out_card)
table(out_card$X2)
table(out_card$X3)
table(out_card$X3, out_card$X2)
table(out_card$X3, out_card$X2, addmargins())
table(out_card$X3, out_card$X2, addmargins=TRUE)
addmargins(table(out_card$X3, out_card$X2))
knitr::opts_chunk$set(echo = TRUE)
help(head)
library(readr)
library(kable)
library(readr)
library(knitr)
out_card <- read_delim("Documentos/UOCMaster/ARIBA/out.card.tsv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
kable(head(out_card,20)
library(readr)
library(knitr)
out_card <- read_delim("Documentos/UOCMaster/ARIBA/out.card.tsv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
kable(head(out_card, n=20L)
kable(head(out_card, n=20L))
head(out_card, n=20L)
library(readr)
library(knitr)
out_card <- read_delim("Documentos/UOCMaster/ARIBA/out.card.tsv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
kable(head(out_card, n=20L))
addmargins(table(out_card$X3, out_card$X2))
library(dplyr)
n_distinct(out_card$X1)
1094-239
install.packages("ggVennDiagram")
install.packages("units")
install.packages("units")
library(devtools)
devtools::install_github("benjjneb/dada2")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documentos/Repos/UOC-Master/testOutputs")
library(readr)
gene_mapping_data <- read_delim("RGI/RTC_149_RGI_output.gene_mapping_data.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
allele_mapping_data <- read_delim("RGI/RTC_149_RGI_output.allele_mapping_data.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
library(dplyr)
totalMapReads<-19968 ##value obtained from *overall_mapping_stats.txt
totalNumReads<-	17072992
allele_mapping_data<-allele_mapping_data%>%mutate(RPKM=`All Mapped Reads` /(`Reference Length`/1000 * totalNumReads/1000000))
gene_mapping_data<-gene_mapping_data%>%mutate(RPKM=`All Mapped Reads` /(`Reference Length`/1000 * totalNumReads/1000000))
library(ggplot2)
ggplot(allele_mapping_data, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50, aes(y = stat(density)))+geom_density()+theme_bw()
ggplot(allele_mapping_data, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50)+theme_bw()
allele_mapping_data<-allele_mapping_data%>%filter(`Average MAPQ (Completely Mapped Reads)`>10)
library(knitr)
n_distinct(allele_mapping_data$`AMR Gene Family`)
AMR_family_RGI<-allele_mapping_data%>%
group_by(`AMR Gene Family`)%>%
summarise('number of AMR genes per family (RGI)'=n(),
sum_RPKM_RGI=sum(RPKM),
avg_MAPQ=mean(`Average MAPQ (Completely Mapped Reads)`),
q1_MAPQ=quantile(`Average MAPQ (Completely Mapped Reads)`, 0.25),
p3_MAPQ=quantile(`Average MAPQ (Completely Mapped Reads)`,0.75),)%>%arrange(desc(sum_RPKM_RGI))
kable(head(AMR_family_RGI))
str(AMR_family_RGI$`sum RPKM (RGI)`)
library(readr)
aro_index <- read_delim("aro_index.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(stringr)
library(reshape2)
y<-colsplit(report$ref_name, "\\.", c("ARO Term", "ARO Acession","NCBI","init_final","Model Sequence ID","X"))
report <- read_delim("ARIBA/report.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
report<-report%>% filter(gene==1)%>%select(c(1:8,31))%>%unique()
AribaMapReds<-5803 ##obtained from minimap.properPairs
totalNumReads<-	17072992
report<-report%>%mutate(RPKM=reads /(ref_len/1000 * totalNumReads/1000000))
library(readr)
aro_index <- read_delim("aro_index.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(stringr)
library(reshape2)
y<-colsplit(report$ref_name, "\\.", c("ARO Term", "ARO Acession","NCBI","init_final","Model Sequence ID","X"))
y$NCBI<-ifelse(str_detect(y$init_final, "_"),y$NCBI ,paste(y$NCBI,".",y$init_final) )
y$init_final<-ifelse(str_detect(y$init_final, "_"), y$init_final, y$`Model Sequence ID`)
y$`Model Sequence ID`<-ifelse(str_detect(y$`Model Sequence ID`, "_"), y$X, y$`Model Sequence ID`)
y<-select(y, -X)
report<-cbind(report,y)
report<-merge(report, select(aro_index,`Model Sequence ID`, `AMR Gene Family`,`Drug Class`, `Resistance Mechanism` ) , by="Model Sequence ID")
str(report$rp)
View(report)
install.packages('car')
library(car)
install.packages('ggpubr')
library(ggpubr)
install.packages('dplyr')
install.packages('dplyr')
install.packages("rlang")
rlang --version
version(rlang)
packageVersion("rlang")
update.packages("rlang")
packageVersion("rlang")
q()
install.packages("rlang")
remotes::install_github("r-lib/rlang")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_0.4.9.tar.gz", repo=NULL, type="source")
R version
version(R)
version()
q()
install.packages("rlang")
devtools::install_cran("rlang")
install.packages("devtools")
knitr::opts_chunk$set(echo = FALSE)
knit_with_parameters('~/Documentos/Sesion_LefSe.Rmd')
library(devtools)
install.packages("devtools")
install.packages("dplyr")
help(list.files)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documentos/Repos/UOC-Master/PRJNA307231")
setwd("~/Documentos/Repos/UOC-Master/PRJNA307231")
library(readr)
metadata <- read_delim("samples_metadata.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
totalNumReads <- read_delim("totalNumReads.csv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
names(totalNumReads)<-c("Run", "totalNumReads")
metadata<-merge(metadata, totalNumReads, by="Run")
RGI_files<-list.files("RGI_analysis", "*.data.txt", full.names = TRUE)
RGI_data <- lapply(RGI_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
RGI_files
metadata$Run
names(RGI_data)<-metadata$Run
for (i in 1:length(RGI_data)){
RGI_data[[i]]$RPKM<-RGI_data[[i]]$`All Mapped Reads`/(RGI_data2[[i]]$`Reference Length`/1000 * metadata$totalNumReads[i]/1000000)
}
for (i in 1:length(RGI_data)){
RGI_data[[i]]$RPKM<-RGI_data[[i]]$`All Mapped Reads`/(RGI_data[[i]]$`Reference Length`/1000 * metadata$totalNumReads[i]/1000000)
}
library(ggplot2)
plots<-function(x){ggplot(x, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50, aes(y = stat(density)))+geom_density()+theme_bw()}
plots(RGI_data[[1]])
library(ggplot2)
plots<-function(x){ggplot(x, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50)+theme_bw()}
plots(RGI_data[[1]])
library(ggplot2)
plots<-function(x){ggplot(x, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50)+theme_bw()}
RGI_plots<-lapply(RGI_data, plots)
View(RGI_plots)
library(gridExtra)
install.packages("ggeffects")
library(ggeffects)
plot_grid()
library(devtools)
devtools::install_github("strengejacke/sjPlot")
grid.arrange(grobs = RGI_plots, ncol = 4)
RGI_data2<-lapply(RGI_data, function(x) filter(x, `Average MAPQ (Completely Mapped Reads)`>10))
RGI_data2<-lapply(RGI_data, function(x) subset(x, x$`Average MAPQ (Completely Mapped Reads)`>10))
RGI_data<-lapply(RGI_data, function(x) subset(x, x$`Average MAPQ (Completely Mapped Reads)`>10))
rm(RGI_data2)
help("aggregate")
RGI_data[[1]]
x<-RGI_data[[1]]
View(x)
names(x)
aggregate(x, by=AMR Gene Family)
aggregate(x, by='AMR Gene Family')
aggregate(x, by='AMR Gene Family', sum)
aggregate(x, by=list('AMR Gene Family'), sum)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documentos/Repos/UOC-Master/PRJNA307231")
setwd("~/Documentos/Repos/UOC-Master/PRJNA307231")
library(readr)
metadata <- read_delim("samples_metadata.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
totalNumReads <- read_delim("totalNumReads.csv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
names(totalNumReads)<-c("Run", "totalNumReads")
metadata<-merge(metadata, totalNumReads, by="Run")
RGI_files<-list.files("RGI_analysis", "*.data.txt", full.names = TRUE)
RGI_data <- lapply(RGI_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
names(RGI_data)<-metadata$Run
for (i in 1:length(RGI_data)){
RGI_data[[i]]$RPKM<-RGI_data[[i]]$`All Mapped Reads`/(RGI_data[[i]]$`Reference Length`/1000 * metadata$totalNumReads[i]/1000000)
}
library(ggplot2)
library(gridExtra)
plots<-function(x){ggplot(x, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50)+theme_bw()}
RGI_plots<-lapply(RGI_data, plots)
grid.arrange(grobs = RGI_plots, ncol = 4)
RGI_data<-lapply(RGI_data, function(x) subset(x, x$`Average MAPQ (Completely Mapped Reads)`>10))
library(dplyr)
amrfamily<-function(x, pipeline){
y<-x%>%group_by(`AMR Gene Family`)%>%summarise(v1=n(), v2=sum(RPKM))
names(y)[2:3]<-c(paste('nAMR_genes_perfamily_', pipeline, sep=''),paste('sum_RPKM_', pipeline, sep=''))
return(y)}
drugclass<-function(x, pipeline){
y<-x%>%group_by(`Drug Class`)%>%summarise(v1=n(), v2=sum(RPKM))
names(y)[2:3]<-c(paste('nAMR_genes_perdrugclass_', pipeline, sep=''),paste('sum_RPKM_', pipeline, sep=''))
return(y)}
RGI_summary<-lapply(RGI_data, function(x) amrfamily (x, 'RGI'))
RGI_summary2<-lapply(RGI_data, function(x) drugclass (x, 'RGI'))
library(dplyr)
View(RGI_summary2)
View(RGI_summary2[["SRR6714072"]])
ariba_files<-list.files("ariba_analysis", full.names = TRUE)
ariba_data <- lapply(ariba_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
names(ariba_data)<-metadata$Run
aribasubs<-function(x){x%>%select(c(1:8,31))%>%unique()}
aribasubs2<-function(x){x%>% filter(gene==1)%>%select(c(1:8,31))%>%unique()} ##Only coding sequences
ariba_data<-lapply(ariba_data, aribasubs)
for (i in 1:length(ariba_data)){
ariba_data[[i]]$RPKM<-ariba_data[[i]]$`reads`/(ariba_data[[i]]$`ref_len`/1000 * metadata$totalNumReads[i]/1000000)}
aribasubs<-function(x){x%>%select(c(1:8,31))%>%unique()}
aribasubs2<-function(x){x%>% filter(gene==1)%>%select(c(1:8,31))%>%unique()} ##Only coding sequences
ariba_data<-lapply(ariba_data, aribasubs)
ariba_files<-list.files("ariba_analysis", full.names = TRUE)
ariba_data <- lapply(ariba_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
names(ariba_data)<-metadata$Run
aribasubs<-function(x){x%>%select(c(1:8,31))%>%unique()}
aribasubs2<-function(x){x%>% filter(gene==1)%>%select(c(1:8,31))%>%unique()} ##Only coding sequences
ariba_data<-lapply(ariba_data, aribasubs)
for (i in 1:length(ariba_data)){
ariba_data[[i]]$RPKM<-ariba_data[[i]]$`reads`/(ariba_data[[i]]$`ref_len`/1000 * metadata$totalNumReads[i]/1000000)}
aro_index <- read_delim("aro_index.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(stringr)
library(reshape2)
aribanotation<-function(x){
y<-colsplit(x$ref_name, "\\.", c("ARO Term", "ARO Accession","NCBI","init_final","Model Sequence ID","v1"))
y$NCBI<-ifelse(str_detect(y$init_final, "_"),y$NCBI ,paste(y$NCBI,".",y$init_final) )
y$init_final<-ifelse(str_detect(y$init_final, "_"), y$init_final, y$`Model Sequence ID`)
y$`Model Sequence ID`<-ifelse(str_detect(y$`Model Sequence ID`, "_"), y$v1, y$`Model Sequence ID`)
y<-select(y, -v1)
x<-cbind(x,y)
x$'ARO Accession'<-paste('ARO:', x$'ARO Accession', sep='')
x<-merge(x, select(aro_index,`Model Sequence ID`, `AMR Gene Family`,`Drug Class`, `Resistance Mechanism`, `ARO Accession`) , by="ARO Accession", all.x=TRUE)
return(x)}
ariba_data<-lapply(ariba_data, aribanotation)
lapply(ariba_data, function(x) table(is.na(x$`AMR Gene Family`)))
ariba_summary<-lapply(ariba_data, function(x) amrfamily (x, 'ariba'))
ariba_summary2<-lapply(ariba_data, function(x) drugclass (x, 'ariba'))
groot_files<-list.files("groot_analysis", "*.0report", full.names = TRUE)
groot_data <- lapply(groot_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE, col_names = c("AMR.gene", "read.count", "gene.length", "coverage.cigar")))
names(groot_data)<-metadata$Run
for (i in 1:length(groot_data)){
groot_data[[i]]$RPKM<-groot_data[[i]]$read.count/(groot_data[[i]]$gene.length/1000 * metadata$totalNumReads[i]/1000000)
}
grootnotation<-function(x){
y<-colsplit(x$AMR.gene, "\\.", c("ARO Term", "ARO Accession","NCBI","init_final","Model Sequence ID","v1"))
y$NCBI<-ifelse(str_detect(y$init_final, "-"),y$NCBI ,paste(y$NCBI,".",y$init_final) )
y$init_final<-ifelse(str_detect(y$init_final, "-"), y$init_final, y$`Model Sequence ID`)
y$`Model Sequence ID`<-ifelse(str_detect(y$`Model Sequence ID`, "-"), y$v1, y$`Model Sequence ID`)
y<-select(y, -v1)
x<-cbind(x,y)
x$'ARO Accession'<-paste('ARO:', x$'ARO Accession', sep='')
x<-merge(x, select(aro_index,`Model Sequence ID`, `AMR Gene Family`,`Drug Class`, `Resistance Mechanism`, `ARO Accession` ) , by="ARO Accession", all.x=TRUE)
return(x)}
groot_data<-lapply(groot_data, grootnotation)
groot_summary<-lapply(groot_data, function(x) amrfamily (x, 'groot'))
groot_summary2<-lapply(groot_data, function(x) drugclass (x, 'groot'))
comparison_list<-Map(merge, RGI_summary, ariba_summary, by="AMR Gene Family", all=TRUE)
comparison_list<-Map(merge, comparison_list, groot_summary, by="AMR Gene Family", all=TRUE)
comparison_df<-do.call(rbind, comparison_list)
comparison_list2<-Map(merge, RGI_summary2, ariba_summary2, by="Drug Class", all=TRUE)
comparison_list2<-Map(merge, comparison_list2, groot_summary2, by="Drug Class", all=TRUE)
comparison_df2<-do.call(rbind, comparison_list2)
venntransform<-function(x){
x$RGI<-ifelse(is.na(x$sum_RPKM_RGI),FALSE,TRUE)
x$Ariba<-ifelse(is.na(x$sum_RPKM_ariba),FALSE,TRUE)
x$Groot<-ifelse(is.na(x$sum_RPKM_groot),FALSE,TRUE)
x$All<-ifelse(x$RGI==TRUE & x$Ariba==TRUE & x$Groot==TRUE, TRUE, FALSE)
return(x)}
comparison_list<-lapply(comparison_list, venntransform)
comparison_list2<-lapply(comparison_list2, venntransform)
library(ggvenn)
vennplot<-function(x){
y<-ggplot(x) + geom_venn(aes(A = RGI, B = Ariba, C = Groot),fill_color = c("chartreuse", "orange", "darkorchid1"), text_size=4, set_name_size = 2, stroke_size = 0.2, show_percentage = FALSE)+theme_void()+coord_fixed()+theme(title=element_text(size=5))
return(y)}
venn_plots<-lapply(comparison_list, vennplot)
venn_plots2<-lapply(comparison_list2, vennplot)
for (i in 1:length(venn_plots))
{venn_plots[[i]]<-venn_plots[[i]]+ggtitle(metadata$Run[i])}
for (i in 1:length(venn_plots2))
{venn_plots2[[i]]<-venn_plots2[[i]]+ggtitle(metadata$Run[i])}
grid.arrange(grobs = venn_plots, ncol = 4, top="AMR gene family")
library(ggvenn)
vennplot<-function(x){
y<-ggplot(x) + geom_venn(aes(A = RGI, B = Ariba, C = Groot),fill_color = c("chartreuse", "orange", "darkorchid1"), text_size=4, set_name_size = 2, stroke_size = 0.2, show_percentage = FALSE)+theme_void()+coord_fixed()+theme(title=element_text(size=5))
return(y)}
venn_plots<-lapply(comparison_list, vennplot)
venn_plots2<-lapply(comparison_list2, vennplot)
for (i in 1:length(venn_plots))
{venn_plots[[i]]<-venn_plots[[i]]+ggtitle(metadata$Run[i])}
for (i in 1:length(venn_plots2))
{venn_plots2[[i]]<-venn_plots2[[i]]+ggtitle(metadata$Run[i])}
grid.arrange(grobs = venn_plots, ncol = 4, top="AMR gene family")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documentos/Repos/UOC-Master/PRJNA307231")
setwd("~/Documentos/Repos/UOC-Master/PRJNA307231")
library(readr)
metadata <- read_delim("samples_metadata.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
totalNumReads <- read_delim("totalNumReads.csv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
names(totalNumReads)<-c("Run", "totalNumReads")
metadata<-merge(metadata, totalNumReads, by="Run")
RGI_files<-list.files("RGI_analysis", "*.data.txt", full.names = TRUE)
RGI_data <- lapply(RGI_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
names(RGI_data)<-metadata$Run
for (i in 1:length(RGI_data)){
RGI_data[[i]]$RPKM<-RGI_data[[i]]$`All Mapped Reads`/(RGI_data[[i]]$`Reference Length`/1000 * metadata$totalNumReads[i]/1000000)
}
library(ggplot2)
library(gridExtra)
plots<-function(x){ggplot(x, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50)+theme_bw()}
RGI_plots<-lapply(RGI_data, plots)
grid.arrange(grobs = RGI_plots, ncol = 4)
extrafont::font_import()
extrafont::font_import()
