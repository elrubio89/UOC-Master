length(comparison_df2$`Drug Class`)
quant_comp<-function(df_comp, group){
nsamples<-n_distinct(df_comp$Sample)
ngroup<-n_distinct(df_comp$group)
mat1<-matrix(nrow=ngroup*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$group), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=ngroup)
colnames(mat1)<-c(group, 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", group), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df, 'AMR Gene Family')
View(comparison_df)
quant_comp<-function(df_comp, group){
nsamples<-n_distinct(df_comp$Sample)
ngroup<-n_distinct(df_comp$group)
mat1<-matrix(nrow=ngroup*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$group), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=ngroup)
colnames(mat1)<-c(group, 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", as.character(group)), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df, 'AMR Gene Family')
quant_comp<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
namrgenes<-n_distinct(df_comp$`AMR Gene Family`)
mat1<-matrix(nrow=namrgenes*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(comparison_df$`AMR Gene Family`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('AMR Gene Family', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "AMR Gene Family"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df, 'AMR Gene Family')
comparison_df<-quant_comp(comparison_df)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documentos/Repos/UOC-Master/PRJNA307231")
setwd("~/Documentos/Repos/UOC-Master/PRJNA307231")
library(readr)
metadata <- read_delim("samples_metadata.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
totalNumReads <- read_delim("totalNumReads.csv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
names(totalNumReads)<-c("Run", "totalNumReads")
metadata<-merge(metadata, totalNumReads, by="Run")
RGI_files<-list.files("RGI_analysis", "*.data.txt", full.names = TRUE)
RGI_data <- lapply(RGI_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
names(RGI_data)<-metadata$Run
for (i in 1:length(RGI_data)){
RGI_data[[i]]$RPKM<-RGI_data[[i]]$`All Mapped Reads`/(RGI_data[[i]]$`Reference Length`/1000 * metadata$totalNumReads[i]/1000000)
}
library(ggplot2)
library(gridExtra)
plots<-function(x){ggplot(x, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50)+theme_bw()}
RGI_plots<-lapply(RGI_data, plots)
grid.arrange(grobs = RGI_plots, ncol = 4)
RGI_data<-lapply(RGI_data, function(x) subset(x, x$`Average MAPQ (Completely Mapped Reads)`>10))
library(dplyr)
amrfamily<-function(x, pipeline){
y<-x%>%group_by(`AMR Gene Family`)%>%summarise(v1=n(), v2=sum(RPKM))
names(y)[2:3]<-c(paste('nAMR_genes_perfamily_', pipeline, sep=''),paste('sum_RPKM_', pipeline, sep=''))
return(y)}
drugclass<-function(x, pipeline){
y<-x%>%group_by(`Drug Class`)%>%summarise(v1=n(), v2=sum(RPKM))
names(y)[2:3]<-c(paste('nAMR_genes_perdrugclass_', pipeline, sep=''),paste('sum_RPKM_', pipeline, sep=''))
return(y)}
RGI_summary<-lapply(RGI_data, function(x) amrfamily (x, 'RGI'))
RGI_summary2<-lapply(RGI_data, function(x) drugclass (x, 'RGI'))
ariba_files<-list.files("ariba_analysis", full.names = TRUE)
ariba_data <- lapply(ariba_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
names(ariba_data)<-metadata$Run
aribasubs<-function(x){x%>%select(c(1:8,31))%>%unique()}
aribasubs2<-function(x){x%>% filter(gene==1)%>%select(c(1:8,31))%>%unique()} ##Only coding sequences
ariba_data<-lapply(ariba_data, aribasubs)
for (i in 1:length(ariba_data)){
ariba_data[[i]]$RPKM<-ariba_data[[i]]$`reads`/(ariba_data[[i]]$`ref_len`/1000 * metadata$totalNumReads[i]/1000000)}
aro_index <- read_delim("aro_index.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(stringr)
library(reshape2)
aribanotation<-function(x){
y<-colsplit(x$ref_name, "\\.", c("ARO Term", "ARO Accession","NCBI","init_final","Model Sequence ID","v1"))
y$NCBI<-ifelse(str_detect(y$init_final, "_"),y$NCBI ,paste(y$NCBI,".",y$init_final) )
y$init_final<-ifelse(str_detect(y$init_final, "_"), y$init_final, y$`Model Sequence ID`)
y$`Model Sequence ID`<-ifelse(str_detect(y$`Model Sequence ID`, "_"), y$v1, y$`Model Sequence ID`)
y<-select(y, -v1)
x<-cbind(x,y)
x$'ARO Accession'<-paste('ARO:', x$'ARO Accession', sep='')
x<-merge(x, select(aro_index,`Model Sequence ID`, `AMR Gene Family`,`Drug Class`, `Resistance Mechanism`, `ARO Accession`) , by="ARO Accession", all.x=TRUE)
return(x)}
ariba_data<-lapply(ariba_data, aribanotation)
ariba_summary<-lapply(ariba_data, function(x) amrfamily (x, 'ariba'))
ariba_summary2<-lapply(ariba_data, function(x) drugclass (x, 'ariba'))
groot_files<-list.files("groot_analysis", "*.0report", full.names = TRUE)
groot_data <- lapply(groot_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE, col_names = c("AMR.gene", "read.count", "gene.length", "coverage.cigar")))
names(groot_data)<-metadata$Run
for (i in 1:length(groot_data)){
groot_data[[i]]$RPKM<-groot_data[[i]]$read.count/(groot_data[[i]]$gene.length/1000 * metadata$totalNumReads[i]/1000000)
}
grootnotation<-function(x){
y<-colsplit(x$AMR.gene, "\\.", c("ARO Term", "ARO Accession","NCBI","init_final","Model Sequence ID","v1"))
y$NCBI<-ifelse(str_detect(y$init_final, "-"),y$NCBI ,paste(y$NCBI,".",y$init_final) )
y$init_final<-ifelse(str_detect(y$init_final, "-"), y$init_final, y$`Model Sequence ID`)
y$`Model Sequence ID`<-ifelse(str_detect(y$`Model Sequence ID`, "-"), y$v1, y$`Model Sequence ID`)
y<-select(y, -v1)
x<-cbind(x,y)
x$'ARO Accession'<-paste('ARO:', x$'ARO Accession', sep='')
x<-merge(x, select(aro_index,`Model Sequence ID`, `AMR Gene Family`,`Drug Class`, `Resistance Mechanism`, `ARO Accession` ) , by="ARO Accession", all.x=TRUE)
return(x)}
groot_data<-lapply(groot_data, grootnotation)
groot_summary<-lapply(groot_data, function(x) amrfamily (x, 'groot'))
groot_summary2<-lapply(groot_data, function(x) drugclass (x, 'groot'))
comparison_list<-Map(merge, RGI_summary, ariba_summary, by="AMR Gene Family", all=TRUE)
comparison_list<-Map(merge, comparison_list, groot_summary, by="AMR Gene Family", all=TRUE)
comparison_df<-do.call(rbind, comparison_list)
comparison_list2<-Map(merge, RGI_summary2, ariba_summary2, by="Drug Class", all=TRUE)
comparison_list2<-Map(merge, comparison_list2, groot_summary2, by="Drug Class", all=TRUE)
comparison_df2<-do.call(rbind, comparison_list2)
venntransform<-function(x){
x$RGI<-ifelse(is.na(x$sum_RPKM_RGI),FALSE,TRUE)
x$Ariba<-ifelse(is.na(x$sum_RPKM_ariba),FALSE,TRUE)
x$Groot<-ifelse(is.na(x$sum_RPKM_groot),FALSE,TRUE)
x$All<-ifelse(x$RGI==TRUE & x$Ariba==TRUE & x$Groot==TRUE, TRUE, FALSE)
return(x)}
comparison_list<-lapply(comparison_list, venntransform)
comparison_list2<-lapply(comparison_list2, venntransform)
library(ggvenn)
vennplot<-function(x){
y<-ggplot(x) + geom_venn(aes(A = RGI, B = Ariba, C = Groot),fill_color = c("chartreuse", "orange", "darkorchid1"), text_size=4, set_name_size = 2, stroke_size = 0.2, show_percentage = FALSE)+theme_void()+coord_fixed()+theme(title=element_text(size=5))
return(y)}
venn_plots<-lapply(comparison_list, vennplot)
venn_plots2<-lapply(comparison_list2, vennplot)
for (i in 1:length(venn_plots))
{venn_plots[[i]]<-venn_plots[[i]]+ggtitle(metadata$Run[i])}
for (i in 1:length(venn_plots2))
{venn_plots2[[i]]<-venn_plots2[[i]]+ggtitle(metadata$Run[i])}
grid.arrange(grobs = venn_plots, ncol = 4, top="AMR gene family")
grid.arrange(grobs = venn_plots2, ncol = 4, top="Drug Class")
library(knitr)
kable(head(comparison_df))
kable(head(comparison_df2))
library(stringr)
comparison_df$Sample<-str_split_fixed(rownames(comparison_df), "\\.", n = 2)[ ,1]
comparison_df2$Sample<-str_split_fixed(rownames(comparison_df2), "\\.", n = 2)[ ,1]
n_distinct(comparison_df$`AMR Gene Family`)
length(comparison_df$`AMR Gene Family`)
n_distinct(comparison_df2$`Drug Class`)
length(comparison_df2$`Drug Class`)
quant_comp<-function(df_comp, group){
nsamples<-n_distinct(df_comp$Sample)
ngroup<-n_distinct(df_comp$group)
mat1<-matrix(nrow=ngroup*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$group), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=ngroup)
colnames(mat1)<-c(group, 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", as.character(group)), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
quant_comp<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
namrgenes<-n_distinct(df_comp$`AMR Gene Family`)
mat1<-matrix(nrow=namrgenes*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(comparison_df$`AMR Gene Family`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('AMR Gene Family', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "AMR Gene Family"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df)
comparison_list<-Map(merge, RGI_summary, ariba_summary, by="AMR Gene Family", all=TRUE)
comparison_list<-Map(merge, comparison_list, groot_summary, by="AMR Gene Family", all=TRUE)
comparison_df<-do.call(rbind, comparison_list)
comparison_list2<-Map(merge, RGI_summary2, ariba_summary2, by="Drug Class", all=TRUE)
comparison_list2<-Map(merge, comparison_list2, groot_summary2, by="Drug Class", all=TRUE)
comparison_df2<-do.call(rbind, comparison_list2)
quant_comp<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
namrgenes<-n_distinct(df_comp$`AMR Gene Family`)
mat1<-matrix(nrow=namrgenes*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(comparison_df$`AMR Gene Family`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('AMR Gene Family', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "AMR Gene Family"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
quant_comp<-function(df_comp, group){
nsamples<-n_distinct(df_comp$Sample)
ngroup<-n_distinct(df_comp$group)
mat1<-matrix(nrow=ngroup*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$group), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=ngroup)
colnames(mat1)<-c(group, 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", as.character(group)), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df, `AMR Gene Family`)
comparison_df<-quant_comp(comparison_df, 'AMR Gene Family')
quant_comp<-function(df_comp, group){
nsamples<-n_distinct(df_comp$Sample)
ngroup<-n_distinct(df_comp$group)
mat1<-matrix(nrow=ngroup*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$group), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=ngroup)
colnames(mat1)<-c(group, 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", group), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df, 'AMR Gene Family')
quant_comp<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
namrgenes<-n_distinct(df_comp$`AMR Gene Family`)
mat1<-matrix(nrow=namrgenes*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(comparison_df$`AMR Gene Family`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('AMR Gene Family', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "AMR Gene Family"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
quant_comp2<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
ndrug<-n_distinct(df_comp$`Drug Class`)
mat1<-matrix(nrow=ndrug*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(comparison_df$`Drug Class`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('Drug Class', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "Drug Class"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df)
library(stringr)
comparison_df$Sample<-str_split_fixed(rownames(comparison_df), "\\.", n = 2)[ ,1]
comparison_df2$Sample<-str_split_fixed(rownames(comparison_df2), "\\.", n = 2)[ ,1]
n_distinct(comparison_df$`AMR Gene Family`)
length(comparison_df$`AMR Gene Family`)
n_distinct(comparison_df2$`Drug Class`)
length(comparison_df2$`Drug Class`)
quant_comp<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
namrgenes<-n_distinct(df_comp$`AMR Gene Family`)
mat1<-matrix(nrow=namrgenes*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(comparison_df$`AMR Gene Family`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('AMR Gene Family', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "AMR Gene Family"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
quant_comp2<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
ndrug<-n_distinct(df_comp$`Drug Class`)
mat1<-matrix(nrow=ndrug*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(comparison_df$`Drug Class`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('Drug Class', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "Drug Class"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df)
comparison_df2<-quant_comp2(comparison_df2)
quant_comp2<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
ndrug<-n_distinct(df_comp$`Drug Class`)
mat1<-matrix(nrow=ndrug*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$`Drug Class`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('Drug Class', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "Drug Class"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df)
comparison_df2<-quant_comp2(comparison_df2)
quant_comp2<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
ndrug<-n_distinct(df_comp$`Drug Class`)
mat1<-matrix(nrow=ndrug*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$`Drug Class`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=ndrug)
colnames(mat1)<-c('Drug Class', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "Drug Class"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df)
comparison_df2<-quant_comp2(comparison_df2)
comparison_list<-Map(merge, RGI_summary, ariba_summary, by="AMR Gene Family", all=TRUE)
comparison_list<-Map(merge, comparison_list, groot_summary, by="AMR Gene Family", all=TRUE)
comparison_df<-do.call(rbind, comparison_list)
comparison_list2<-Map(merge, RGI_summary2, ariba_summary2, by="Drug Class", all=TRUE)
comparison_list2<-Map(merge, comparison_list2, groot_summary2, by="Drug Class", all=TRUE)
comparison_df2<-do.call(rbind, comparison_list2)
library(stringr)
comparison_df$Sample<-str_split_fixed(rownames(comparison_df), "\\.", n = 2)[ ,1]
comparison_df2$Sample<-str_split_fixed(rownames(comparison_df2), "\\.", n = 2)[ ,1]
n_distinct(comparison_df$`AMR Gene Family`)
length(comparison_df$`AMR Gene Family`)
n_distinct(comparison_df2$`Drug Class`)
length(comparison_df2$`Drug Class`)
quant_comp3<-function(df_comp, group){
nsamples<-n_distinct(df_comp$Sample)
ngroup<-n_distinct(df_comp$group)
mat1<-matrix(nrow=ngroup*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$group), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=ngroup)
colnames(mat1)<-c(as.character(group), 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", as.character(group)), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df2$`Drug Class`
comparison_df<-quant_comp3(comparison_df, `AMR Gene Family`)
comparison_df2$`Drug Class`
comparison_df<-quant_comp3(comparison_df, "AMR Gene Family")
comparison_df2<-quant_comp3(comparison_df2, `Drug Class`)
comparison_df<-merge(comparison_df, metadata2, by.x = 'Sample', by.y = 'Run')
comparison_df2<-merge(comparison_df2, metadata2, by.x = 'Sample', by.y = 'Run')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documentos/Repos/UOC-Master/PRJNA307231")
setwd("~/Documentos/Repos/UOC-Master/PRJNA307231")
library(readr)
metadata <- read_delim("samples_metadata.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
totalNumReads <- read_delim("totalNumReads.csv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
names(totalNumReads)<-c("Run", "totalNumReads")
metadata<-merge(metadata, totalNumReads, by="Run")
RGI_files<-list.files("RGI_analysis", "*.data.txt", full.names = TRUE)
RGI_data <- lapply(RGI_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
names(RGI_data)<-metadata$Run
for (i in 1:length(RGI_data)){
RGI_data[[i]]$RPKM<-RGI_data[[i]]$`All Mapped Reads`/(RGI_data[[i]]$`Reference Length`/1000 * metadata$totalNumReads[i]/1000000)
}
library(ggplot2)
library(gridExtra)
plots<-function(x){ggplot(x, aes(`Average MAPQ (Completely Mapped Reads)`)) +
geom_histogram(bins=50)+theme_bw()}
RGI_plots<-lapply(RGI_data, plots)
grid.arrange(grobs = RGI_plots, ncol = 4)
RGI_data<-lapply(RGI_data, function(x) subset(x, x$`Average MAPQ (Completely Mapped Reads)`>10))
library(dplyr)
amrfamily<-function(x, pipeline){
y<-x%>%group_by(`AMR Gene Family`)%>%summarise(v1=n(), v2=sum(RPKM))
names(y)[2:3]<-c(paste('nAMR_genes_perfamily_', pipeline, sep=''),paste('sum_RPKM_', pipeline, sep=''))
return(y)}
drugclass<-function(x, pipeline){
y<-x%>%group_by(`Drug Class`)%>%summarise(v1=n(), v2=sum(RPKM))
names(y)[2:3]<-c(paste('nAMR_genes_perdrugclass_', pipeline, sep=''),paste('sum_RPKM_', pipeline, sep=''))
return(y)}
RGI_summary<-lapply(RGI_data, function(x) amrfamily (x, 'RGI'))
RGI_summary2<-lapply(RGI_data, function(x) drugclass (x, 'RGI'))
ariba_files<-list.files("ariba_analysis", full.names = TRUE)
ariba_data <- lapply(ariba_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE))
names(ariba_data)<-metadata$Run
aribasubs<-function(x){x%>%select(c(1:8,31))%>%unique()}
aribasubs2<-function(x){x%>% filter(gene==1)%>%select(c(1:8,31))%>%unique()} ##Only coding sequences
ariba_data<-lapply(ariba_data, aribasubs)
for (i in 1:length(ariba_data)){
ariba_data[[i]]$RPKM<-ariba_data[[i]]$`reads`/(ariba_data[[i]]$`ref_len`/1000 * metadata$totalNumReads[i]/1000000)}
aro_index <- read_delim("aro_index.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(stringr)
library(reshape2)
aribanotation<-function(x){
y<-colsplit(x$ref_name, "\\.", c("ARO Term", "ARO Accession","NCBI","init_final","Model Sequence ID","v1"))
y$NCBI<-ifelse(str_detect(y$init_final, "_"),y$NCBI ,paste(y$NCBI,".",y$init_final) )
y$init_final<-ifelse(str_detect(y$init_final, "_"), y$init_final, y$`Model Sequence ID`)
y$`Model Sequence ID`<-ifelse(str_detect(y$`Model Sequence ID`, "_"), y$v1, y$`Model Sequence ID`)
y<-select(y, -v1)
x<-cbind(x,y)
x$'ARO Accession'<-paste('ARO:', x$'ARO Accession', sep='')
x<-merge(x, select(aro_index,`Model Sequence ID`, `AMR Gene Family`,`Drug Class`, `Resistance Mechanism`, `ARO Accession`) , by="ARO Accession", all.x=TRUE)
return(x)}
ariba_data<-lapply(ariba_data, aribanotation)
ariba_summary<-lapply(ariba_data, function(x) amrfamily (x, 'ariba'))
ariba_summary2<-lapply(ariba_data, function(x) drugclass (x, 'ariba'))
groot_files<-list.files("groot_analysis", "*.0report", full.names = TRUE)
groot_data <- lapply(groot_files, function (x) read_delim(x, delim="\t", escape_double = FALSE, trim_ws = TRUE, col_names = c("AMR.gene", "read.count", "gene.length", "coverage.cigar")))
names(groot_data)<-metadata$Run
for (i in 1:length(groot_data)){
groot_data[[i]]$RPKM<-groot_data[[i]]$read.count/(groot_data[[i]]$gene.length/1000 * metadata$totalNumReads[i]/1000000)
}
grootnotation<-function(x){
y<-colsplit(x$AMR.gene, "\\.", c("ARO Term", "ARO Accession","NCBI","init_final","Model Sequence ID","v1"))
y$NCBI<-ifelse(str_detect(y$init_final, "-"),y$NCBI ,paste(y$NCBI,".",y$init_final) )
y$init_final<-ifelse(str_detect(y$init_final, "-"), y$init_final, y$`Model Sequence ID`)
y$`Model Sequence ID`<-ifelse(str_detect(y$`Model Sequence ID`, "-"), y$v1, y$`Model Sequence ID`)
y<-select(y, -v1)
x<-cbind(x,y)
x$'ARO Accession'<-paste('ARO:', x$'ARO Accession', sep='')
x<-merge(x, select(aro_index,`Model Sequence ID`, `AMR Gene Family`,`Drug Class`, `Resistance Mechanism`, `ARO Accession` ) , by="ARO Accession", all.x=TRUE)
return(x)}
groot_data<-lapply(groot_data, grootnotation)
groot_summary<-lapply(groot_data, function(x) amrfamily (x, 'groot'))
groot_summary2<-lapply(groot_data, function(x) drugclass (x, 'groot'))
comparison_list<-Map(merge, RGI_summary, ariba_summary, by="AMR Gene Family", all=TRUE)
comparison_list<-Map(merge, comparison_list, groot_summary, by="AMR Gene Family", all=TRUE)
comparison_df<-do.call(rbind, comparison_list)
comparison_list2<-Map(merge, RGI_summary2, ariba_summary2, by="Drug Class", all=TRUE)
comparison_list2<-Map(merge, comparison_list2, groot_summary2, by="Drug Class", all=TRUE)
comparison_df2<-do.call(rbind, comparison_list2)
venntransform<-function(x){
x$RGI<-ifelse(is.na(x$sum_RPKM_RGI),FALSE,TRUE)
x$Ariba<-ifelse(is.na(x$sum_RPKM_ariba),FALSE,TRUE)
x$Groot<-ifelse(is.na(x$sum_RPKM_groot),FALSE,TRUE)
x$All<-ifelse(x$RGI==TRUE & x$Ariba==TRUE & x$Groot==TRUE, TRUE, FALSE)
return(x)}
comparison_list<-lapply(comparison_list, venntransform)
comparison_list2<-lapply(comparison_list2, venntransform)
library(ggvenn)
vennplot<-function(x){
y<-ggplot(x) + geom_venn(aes(A = RGI, B = Ariba, C = Groot),fill_color = c("chartreuse", "orange", "darkorchid1"), text_size=4, set_name_size = 2, stroke_size = 0.2, show_percentage = FALSE)+theme_void()+coord_fixed()+theme(title=element_text(size=5))
return(y)}
venn_plots<-lapply(comparison_list, vennplot)
venn_plots2<-lapply(comparison_list2, vennplot)
for (i in 1:length(venn_plots))
{venn_plots[[i]]<-venn_plots[[i]]+ggtitle(metadata$Run[i])}
for (i in 1:length(venn_plots2))
{venn_plots2[[i]]<-venn_plots2[[i]]+ggtitle(metadata$Run[i])}
grid.arrange(grobs = venn_plots, ncol = 4, top="AMR gene family")
grid.arrange(grobs = venn_plots2, ncol = 4, top="Drug Class")
library(knitr)
kable(head(comparison_df))
kable(head(comparison_df2))
library(stringr)
comparison_df$Sample<-str_split_fixed(rownames(comparison_df), "\\.", n = 2)[ ,1]
comparison_df2$Sample<-str_split_fixed(rownames(comparison_df2), "\\.", n = 2)[ ,1]
n_distinct(comparison_df$`AMR Gene Family`)
length(comparison_df$`AMR Gene Family`)
n_distinct(comparison_df2$`Drug Class`)
length(comparison_df2$`Drug Class`)
quant_comp<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
namrgenes<-n_distinct(df_comp$`AMR Gene Family`)
mat1<-matrix(nrow=namrgenes*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(comparison_df$`AMR Gene Family`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=namrgenes)
colnames(mat1)<-c('AMR Gene Family', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "AMR Gene Family"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
quant_comp2<-function(df_comp){
nsamples<-n_distinct(df_comp$Sample)
ndrug<-n_distinct(df_comp$`Drug Class`)
mat1<-matrix(nrow=ndrug*nsamples, ncol=2)
mat1[ ,1]<-rep(unique(df_comp$`Drug Class`), nsamples)
mat1[ ,2]<-rep(metadata$Run, each=ndrug)
colnames(mat1)<-c('Drug Class', 'Sample')
mat1<-as.data.frame(mat1)
mat2<-merge(mat1, df_comp, by=c("Sample", "Drug Class"), all.x = TRUE)
mat2[is.na(mat2)]<- 0
return(mat2)}
comparison_df<-quant_comp(comparison_df)
comparison_df2<-quant_comp2(comparison_df2)
metadata2<-select(metadata, 'Run', 'HIV_serostatus','Host_Age', 'HIV_Profile',  'PCR_human_papilloma_virus', 'host_Residency_Area', 'HCV_coinfection', 'leukocytes','stool_consistency', 'Lymphocytes',  'Anal_cytology')
dim(comparison_df)
comparison_df<-merge(comparison_df, metadata2, by.x = 'Sample', by.y = 'Run')
comparison_df2<-merge(comparison_df2, metadata2, by.x = 'Sample', by.y = 'Run')
comparison_list_amr = split(comparison_df, f = comparison_df$`AMR Gene Family`)
comparison_list_drug = split(comparison_df2, f = comparison_df2$`Drug Class`)
HIVfun<-function(list){
pvalues_RGI<-lapply(list, function(x) wilcox.test(sum_RPKM_RGI~HIV_serostatus, data=x)$p.value)
pvalues_ariba<-lapply(list, function(x) wilcox.test(sum_RPKM_ariba~HIV_serostatus, data=x)$p.value)
pvalues_groot<-lapply(list, function(x) wilcox.test(sum_RPKM_groot~HIV_serostatus, data=x)$p.value)
x<-do.call(rbind.data.frame, pvalues_RGI)
y<-do.call(rbind.data.frame, pvalues_ariba)
z<-do.call(rbind.data.frame, pvalues_groot)
pvalues_all<-cbind(x,y,z)
rownames(pvalues_all)<-names(pvalues_RGI)
names(pvalues_all)<-c("RGI", "Ariba","Groot")
return(pvalues_all)}
pvalues_all_amr<-HIVfun(comparison_list_amr)
View(pvalues_all_amr)
pvalues_all_amr<-HIVfun(comparison_list_amr)
pvalues_all_drug<-HIVfun(comparison_list_drug)
View(pvalues_all_drug)
pvalues_all_amr<-HIVfun(comparison_list_amr)
pvalues_all_drug<-HIVfun(comparison_list_drug)
subset_sig<-function(pvalues)
{sig<-subset(pvalues, pvalues$RGI<=0.05 | pvalues$Ariba<=0.05 | pvalues$Groot<=0.05)
return(sig)}
pvalues_amr_sig<-subset_sig(pvalues_all_amr)
View(pvalues_amr_sig)
library(knitr)
subset_sig<-function(pvalues)
{sig<-subset(pvalues, pvalues$RGI<=0.05 | pvalues$Ariba<=0.05 | pvalues$Groot<=0.05)
return(sig)}
pvalues_amr_sig<-subset_sig(pvalues_all_amr)
pvalues_drug_sig<-subset_sig(pvalues_all_drug)
kable(round(pvalues_amr_sig,3))
kable(round(pvalues_drug_sig,3))
View(pvalues_drug_sig)
setwd("~/Documentos/Repos/UOC-Master/PRJNA307231")
write.csv(pvalues_amr_sig, "pvalues_amr_sig.csv")
write.csv(pvalues_drug_sig, "pvalues_drug_sig.csv")
